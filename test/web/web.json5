/*
    web.json5 - Web server configuration file for testing

    See doc/web.json5 for examples.
*/
{
    log: {
        path: 'log.txt',
        format: '%S: %T: %M',
        types: 'error,info,trace',
        sources: 'all,!mbedtls',
        // _show: 'hH',  // Debug flag disabled for production security
    },
    tls: {
        authority: 'certs/ca.crt',
        certificate: 'certs/test.crt',
        key: 'certs/test.key',
        _verify: {
            client: false,
            issuer: false,
        },
        _ciphers: [
            'TLS_AES_256_GCM_SHA384', 
            'TLS_AES_128_GCM_SHA256',
            'TLS_CHACHA20_POLY1305_SHA256', 
            'TLS_AES_128_CCM_SHA256',
            'TLS_AES_128_CCM_8_SHA256',
            'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384',
            'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384',
            'TLS_DHE_RSA_WITH_AES_256_GCM_SHA384',
            'TLS_ECDHE_ECDSA_WITH_AES_256_CCM',
            'TLS_DHE_RSA_WITH_AES_256_CCM',
            'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384',
            'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384',
            'TLS_DHE_RSA_WITH_AES_256_CBC_SHA256',
            'TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8',
            'TLS_DHE_RSA_WITH_AES_256_CCM_8',
            'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256',
            'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256',
            'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256',
            'TLS_ECDHE_ECDSA_WITH_AES_128_CCM',
            'TLS_DHE_RSA_WITH_AES_128_CCM',
            'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256',
            'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256',
            'TLS_DHE_RSA_WITH_AES_128_CBC_SHA256',
            'TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8',
            'TLS_DHE_RSA_WITH_AES_128_CCM_8',
            'TLS_RSA_WITH_AES_256_GCM_SHA384',
            'TLS_RSA_WITH_AES_256_CCM',
            'TLS_RSA_WITH_AES_256_CBC_SHA256',
            'TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384',
            'TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384',
            'TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384',
            'TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384',
            'TLS_RSA_WITH_AES_256_CCM_8',
            'TLS_RSA_WITH_AES_128_GCM_SHA256',
            'TLS_RSA_WITH_AES_128_CCM',
            'TLS_RSA_WITH_AES_128_CBC_SHA256',
            'TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256',
            'TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256',
            'TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256',
            'TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256',
            'TLS_RSA_WITH_AES_128_CCM_8',
        ],
    },
    web: {
        auth: {
            roles: ['user', 'admin', 'owner', 'super'],
            login: '/api/public/login',
            logout: '/api/public/logout',
        },
        documents: './site',
        __headers: {
            'Access-Control-Allow-Origin': 'https://www.example.com',
            'Access-Control-Allow-Methods': 'GET, POST',
            'Access-Control-Allow-Headers': 'content-type, authorization',
            'Access-Control-Allow-Credentials': 'true',
            'Access-Control-Allow-Max-Age': '86400',
            'Access-Control-Expose-Headers': 'X-XSRF-TOKEN',
            'X-Content-Type-Options': 'nosniff',
            'X-Frame-Options': 'SAMEORIGIN',
            'X-XSS-Protection': '1; mode=black',
            'Referrer-Policy': 'same-origin',
        },
        index: 'index.html',
        limits: {
            buffer: '64K',
            body: '100K',
            connections: '100',
            fibers: 20,
            header: '10K',
            sessions: '200',
            upload: '20MB',
            maxFrame: '100K',
            maxMessage: '100K',
        },
        listen: ['http://localhost:3150', 'https://localhost:3151'],
        __redirect: [
            { status: 302, to: 'https://:3151' },
            { status: 302, from: 'http', to: '?redirected' },
            { status: 302, to: 'https://hostname:3151' },
            { status: 302, to: 'https://hostname' },
        ],
        routes: [
            //  Trailing "/" matches prefix and allows extra path
            { match: '/test/sig/', handler: 'action', validate: true, role: 'public' },
            { match: '/test/session/', handler: 'action' },
            { match: '/test/xsrf/', handler: 'action', xsrf: true },
            { match: '/test/', handler: 'action' },
            // Upload data goes to test/upload
            { match: '/upload/', methods: ['DELETE', 'GET', 'PUT'] },
            { match: '/trace/', methods: ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT', 'TRACE'], trim: '/trace' },
            { match: '/stream/', trim: '/stream', stream: true, handler: 'action' },
            { match: '/ws/', methods: ['GET'], handler: 'action' },
            { /* Catch all */ },
        ],
        sessions: {
            httpOnly: true,
            sameSite: 'Lax',    // Consider 'Strict' for high-security production applications
        },
        signatures: {
            enable: true,
            path: './signatures.json5',
            strict: true,
        },
        timeouts: {
            parse: '60 secs',
            inactivity: '300 secs',
            request: '10 mins',
            session: '5 mins',
            tls: '1day',
        },
        upload: {
            dir: './tmp',
        },
        webSockets: {
            enable: true,
            ping: 'never',
            protocol: 'chat',
            validateUTF: false,
        },
    },
}
