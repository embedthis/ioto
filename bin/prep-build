#!/bin/bash
#
#   prep-build - Make the required build tools
#
#   This builds the awesome "json" converter tool that can edit, query and convert JSON and JSON5 files.
#
if [ ! -d bin ] ; then
    echo "Must run from the top directory"
    exit 1
fi

mkdir -p state/certs state/config state/db state/site

if [ -f cmds/json.c ] ; then 
    CMDS=cmds
    JSON=lib
    R=lib
else
    CMDS=src/json
    JSON=src/json
    R=src/r
fi
if [ ! -f bin/json ] ; then
    cc -I . \
        -I src/json \
        -I src/r \
        -I src/osdep \
        -I include \
        -DOSDEP_USE_ME=0 \
        -DR_USE_ME=0 \
        -DR_USE_EVENT=0 \
        -DR_USE_FIBER=0 \
        -DR_USE_RB=0 \
        -DR_USE_RUN=0 \
        -DR_USE_SOCKET=0 \
        -DR_USE_THREAD=0 \
        -DR_USE_TLS=0 \
        -DR_USE_WAIT=0 \
        -DR_USE_BUF=1 \
        -DR_USE_FILE=1 \
        -DR_USE_HASH=1 \
        -DR_USE_LIST=1 \
        -DR_USE_STRING=1 \
        -DR_OWN_PRINTF=0 \
        -DME_COM_R=1 \
        -DME_COM_JSON=1 \
        -DME_NAME="\"json\"" \
        -DME_TITLE="\"Json parsing and query\"" \
        -DME_VERSION="\"1.0.0\"" \
        -DME_CONFIG_CMD="\"\"" \
        -o bin/json ${CMDS}/json.c ${JSON}/jsonLib.c ${R}/rLib.c -lm
fi

if [ ! -f state/config/ioto.json5 ] ; then 
    if [ -d apps/demo ] ; then
        cp apps/demo/config/ioto.json5 state/config
    elif [ -d apps/console ] ; then
        cp apps/console/config/ioto.json5 state/config
    else 
        echo '{}' >state/config/ioto.json5
    fi
fi

bin/make-certs
